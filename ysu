
local config = {
    group_ids = {693335996},
    notification_duration = 5,
    persistent_counter = true,
    join_color = Color3.fromRGB(255, 0, 0),
    leave_color = Color3.fromRGB(0, 255, 0),
    counter_position = UDim2.new(0, 10, 0, 10),
    counter_size = UDim2.new(0, 100, 0, 25),
    auto_kick_key = Enum.KeyCode.F3,
    staff_list_key = Enum.KeyCode.F4
}

local auto_kick_enabled = false

local function is_in_group(player)
    for _, group_id in ipairs(config.group_ids) do
        local success, result = pcall(function()
            return player:IsInGroup(group_id)
        end)
        if success and result then
            return true
        end
    end
    return false
end

local function show_notification(text, color)
    local player = game:GetService("Players").LocalPlayer
    local player_gui = player:WaitForChild("PlayerGui")
    local screen_gui = player_gui:FindFirstChild("staff_notifications")

    if not screen_gui then
        screen_gui = Instance.new("ScreenGui")
        screen_gui.Name = "staff_notifications"
        screen_gui.Parent = player_gui
    end

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 300, 0, 50)
    label.Position = UDim2.new(0.5, -150, 0, 50 + (#screen_gui:GetChildren() - 1) * 60)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = color
    label.TextScaled = true
    label.Font = Enum.Font.Oswald
    label.Parent = screen_gui

    task.spawn(function()
        task.wait(config.notification_duration)
        for i = 0, 1, 0.05 do
            label.TextTransparency = i
            task.wait(0.03)
        end
        label:Destroy()
    end)
end

local function get_staff_list()
    local players = game:GetService("Players")
    local staff_members = {}
    for _, plr in pairs(players:GetPlayers()) do
        if is_in_group(plr) then
            local display = plr.DisplayName ~= plr.Name and string.format("%s(%s)", plr.DisplayName, plr.Name) or plr.Name
            table.insert(staff_members, display)
        end
    end
    return staff_members
end

local function update_staff_count(counter_label)
    local players = game:GetService("Players")
    local staff_count = 0

    for _, plr in pairs(players:GetPlayers()) do
        if is_in_group(plr) then
            staff_count += 1
        end
    end

    if counter_label then
        counter_label.Text = "Staff: " .. staff_count
        counter_label.TextColor3 = staff_count > 0 and Color3.fromRGB(0, 0, 0) or Color3.fromRGB(100, 100, 100)
    end

    return staff_count
end

local function setup_counter()
    if not config.persistent_counter then
        return nil
    end

    local player = game:GetService("Players").LocalPlayer
    local player_gui = player:WaitForChild("PlayerGui")

    local screen_gui = Instance.new("ScreenGui")
    screen_gui.Name = "staff_counter_gui"
    screen_gui.Parent = player_gui

    local label = Instance.new("TextLabel")
    label.Size = config.counter_size
    label.Position = config.counter_position
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(0, 0, 0)
    label.TextScaled = true
    label.Font = Enum.Font.Oswald
    label.Text = "Staff: 0"
    label.Parent = screen_gui

    return label
end

local function notify_player(player, action, counter_label)
    local text = player.Name .. (action == "join" and " joined" or " left")
    local color = action == "join" and config.join_color or config.leave_color
    show_notification(text, color)

    local staff_count = update_staff_count(counter_label)
    local local_player = game:GetService("Players").LocalPlayer

    if auto_kick_enabled and staff_count > 0 then
        local_player:Kick("staff detected in server - kill jews")
    end
end

local function init()
    local players = game:GetService("Players")
    local user_input = game:GetService("UserInputService")
    local counter_label = setup_counter()

    -- Initialize staff count properly
    update_staff_count(counter_label)

    for _, plr in pairs(players:GetPlayers()) do
        if is_in_group(plr) then
            notify_player(plr, "join", counter_label)
        end
    end

    players.PlayerAdded:Connect(function(plr)
        if is_in_group(plr) then
            notify_player(plr, "join", counter_label)
        end
    end)

    players.PlayerRemoving:Connect(function(plr)
        if is_in_group(plr) then
            notify_player(plr, "leave", counter_label)
        end
    end)

    user_input.InputBegan:Connect(function(input, processed)
        if processed then return end

        if input.KeyCode == config.auto_kick_key then
            auto_kick_enabled = not auto_kick_enabled
            local status = auto_kick_enabled and "enabled" or "disabled"
            show_notification("autokick " .. status, Color3.fromRGB(0, 0, 0))
            if auto_kick_enabled and update_staff_count(counter_label) > 0 then
                game:GetService("Players").LocalPlayer:Kick("staff detected in server - kill niggers")
            end

        elseif input.KeyCode == config.staff_list_key then
            local staff_list = get_staff_list()
            if #staff_list == 0 then
                show_notification("no staff in server", Color3.fromRGB(0, 0, 0))
            else
                for _, staff_name in ipairs(staff_list) do
                    show_notification(staff_name, Color3.fromRGB(255, 255, 0))
                end
            end
        end
    end)
end

init()
